name: Deploy API to IIS

on:
  workflow_dispatch:
  push:
    branches:  [ dev, main ]
    paths:
      - 'Application/**'
      - 'Application.Client/**'
      - 'Application.Shared/**'

jobs:
  build:
    runs-on: self-hosted

    # Dynamically pick environment: if branch is 'dev', use 'test'; else use 'prod'
    environment: ${{ github.ref_name == 'dev' && 'test' || 'prod' }}

    steps:
    - uses: actions/checkout@v2

    # removed the dotnet setup. because the self hosted agent already has the dotnet installed.
    # - name: Setup .NET Core
    #   uses: actions/setup-dotnet@v4
    #   with:
    #     dotnet-version: 9.x.x
    

    - name: Build with dotnet
      shell: cmd
      run: dotnet build Application/Application.csproj --configuration Release


  # dependecy on the build job
  deploy:
    runs-on: self-hosted
    needs: build

    steps:
    - uses: actions/checkout@v2

    - name: Debug secrets
      shell: powershell
      env:
        APP_IIS: ${{ secrets.APP_IIS }}
      run: |
        Write-Host "The APP_IIS variable is: '$Env:APP_IIS'"



    - name: Publish with dotnet
      shell: cmd
      run: dotnet publish Application/Application.csproj --configuration Release --output .\flowbyte-app #./publish

    - name: Deploy to IIS
      shell: cmd
      env:
        APP_IIS: ${{ secrets.APP_IIS }}
      run: |
        iisreset /stop
        robocopy .\flowbyte-app "C:\inetpub\wwwroot\$Env:APP_IIS" /E /NFL /NDL /NP /R:3 /W:5
        iisreset /start
      

      
